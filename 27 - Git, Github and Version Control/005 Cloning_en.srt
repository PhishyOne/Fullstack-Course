1
00:00:00,290 --> 00:00:07,490
In the last lesson, we looked at how we can push our local repository to a remote repository on GitHub.

2
00:00:07,520 --> 00:00:15,800
Now, in this lesson, I want to talk about cloning a remote repository on GitHub to pull it onto your

3
00:00:15,800 --> 00:00:18,400
local repository on your machine.

4
00:00:18,410 --> 00:00:23,560
So this is called Cloning and the command is, "git clone".

5
00:00:23,570 --> 00:00:30,140
And this is a way for you to pull down all of the versions and all of the commits of a particular remote

6
00:00:30,140 --> 00:00:35,420
repository and to store the files in your own working directory.

7
00:00:35,570 --> 00:00:41,870
So once you've cloned a repo, you've essentially made a copy of it on your own local working environment

8
00:00:41,870 --> 00:00:48,140
and allows you to stand on the shoulders of giants and continue where they left off. So you won't need

9
00:00:48,140 --> 00:00:50,480
to clone it again during regular development.

10
00:00:50,480 --> 00:00:53,990
You'll continue on your own branch of that project.

11
00:00:54,140 --> 00:00:57,570
So why would you need to clone someone else's project?

12
00:00:57,590 --> 00:01:02,340
Well, it's basically so that you can have your own copy of a program that they wrote.

13
00:01:02,370 --> 00:01:05,400
Maybe you want to customize it to your own needs.

14
00:01:05,400 --> 00:01:11,430
Maybe the program needs to do something it currently doesn't do and you want to extend its functionality.

15
00:01:11,430 --> 00:01:14,280
Or maybe you just found a bug and you want to fix it.

16
00:01:14,460 --> 00:01:19,500
So essentially it allows you to leverage somebody else's open source code.

17
00:01:19,500 --> 00:01:25,710
So they're putting their source code out onto the internet and you can simply make a copy of it and

18
00:01:25,710 --> 00:01:27,200
continue where they left off.

19
00:01:27,210 --> 00:01:32,040
For example, a lot of people use self-hosted applications for their business.

20
00:01:32,070 --> 00:01:37,680
These are free versions of products and services you might have to normally pay for, such as productivity

21
00:01:37,680 --> 00:01:45,750
and project management tools that are alternative to Jura, or Trello, or email servers like MailChimp.

22
00:01:45,750 --> 00:01:52,170
Instead of having to pay MailChimp a ton of money, you can host your own email service or time tracking

23
00:01:52,170 --> 00:01:58,530
software for freelancers, and there's a ton, a ton literal ton of different options and you can take

24
00:01:58,530 --> 00:02:02,190
a look through that in this GitHub README.

25
00:02:02,220 --> 00:02:04,200
Let's see how it works in practice.

26
00:02:04,200 --> 00:02:09,990
Let's clone some actual repos from GitHub and run them locally to see how the entire process works.

27
00:02:10,199 --> 00:02:11,700
The command is pretty simple.

28
00:02:11,700 --> 00:02:15,330
It's simply git space, clone space,

29
00:02:15,330 --> 00:02:22,500
the URL (git clone 'url'). The URL will typically be from GitHub and it will look something like this.

30
00:02:22,500 --> 00:02:23,970
So what are we going to clone?

31
00:02:23,970 --> 00:02:29,970
Well, did you know that you can run the original Quake video game in your web browser?

32
00:02:29,970 --> 00:02:35,160
It's entirely built in JavaScript, so there will be parts of it that you'll be able to read through

33
00:02:35,160 --> 00:02:36,780
and you'll be able to understand,

34
00:02:36,780 --> 00:02:40,590
but there will be a lot of work that's done to create this game, so...

35
00:02:40,590 --> 00:02:43,440
Thankfully, we don't have to build it from scratch,

36
00:02:43,440 --> 00:02:46,680
all we have to do is just to get clone.

37
00:02:47,400 --> 00:02:55,740
I go ahead, I grab the URL to clone the repository and in my terminal, I can write git clone and paste

38
00:02:55,740 --> 00:02:56,910
in that URL.

39
00:02:57,810 --> 00:03:04,410
Now once it receives all of the objects and it gets loaded onto my own computer, then I can go ahead

40
00:03:04,410 --> 00:03:07,560
and cd into the repository quake.js,

41
00:03:07,560 --> 00:03:11,250
and once I'm inside that repository,

42
00:03:12,060 --> 00:03:19,470
I can install all of the NPM packages by running "npm install". And then the next step as they described

43
00:03:19,470 --> 00:03:26,610
in the documentation, is I need to set the "content.quakejs.com" as the content server.

44
00:03:26,610 --> 00:03:31,350
So I'm just going to simply copy this entire line of commands and paste it into my terminal.

45
00:03:31,440 --> 00:03:37,950
Now once I'm done, I can simply run the server using Node by again pasting this line of commands.

46
00:03:37,950 --> 00:03:45,150
And once it starts you can see that web server is now listening on port 8080.

47
00:03:45,150 --> 00:03:50,550
And so now I can go to that port and check out the QuakeJS game.

48
00:03:52,630 --> 00:03:58,750
So making sure that your URL is the same as the one that they have set in their documentation,

49
00:03:58,780 --> 00:04:06,160
go ahead and agree and you'll see once everything's loaded up the original Quake game running on your

50
00:04:06,160 --> 00:04:06,810
browser,

51
00:04:06,820 --> 00:04:12,040
but more importantly, you're running it from the code that you cloned from GitHub.

52
00:04:12,310 --> 00:04:15,010
So feel free to have a play around with the game.

53
00:04:15,010 --> 00:04:18,040
It's pretty cool and it's very retro.

54
00:04:18,519 --> 00:04:19,750
And there you have it.

55
00:04:21,130 --> 00:04:23,980
Now another example is Wordle.

56
00:04:24,010 --> 00:04:31,410
Wordle is basically a word game where you have to guess a five-letter word using just six tries.

57
00:04:31,420 --> 00:04:36,400
And it went completely viral a few years ago and eventually got bought by The New York Times.

58
00:04:36,400 --> 00:04:43,120
And the official Wordle is now accessed at the New York Times alongside all of their different crosswords

59
00:04:43,120 --> 00:04:44,070
and puzzles.

60
00:04:44,080 --> 00:04:52,370
But somebody has created all the code for Wordle, and we can clone it and run it on our own system.

61
00:04:52,520 --> 00:04:59,600
Again, grabbing hold of the URL at the GitHub repository for Word Mastermind, you can see it's entirely

62
00:04:59,600 --> 00:05:01,580
created in JavaScript, HTML and CSS.

63
00:05:01,580 --> 00:05:08,450
So all the things that we know about, we can head back to our terminal, use "git clone" to clone from

64
00:05:08,480 --> 00:05:14,270
that URL, and then again cd into the word-mastermind.

65
00:05:14,270 --> 00:05:19,070
And the reason why they created it is because the original game only allows you to play one word per

66
00:05:19,070 --> 00:05:19,310
day,

67
00:05:19,310 --> 00:05:24,350
but what if you get entirely addicted to Wordle and you want to play more than one word per day?

68
00:05:24,350 --> 00:05:30,560
Well, you're in luck because you know how to clone the program and run it on your own system.

69
00:05:30,920 --> 00:05:38,000
Now all we have to do is just go back, use "npm install" to install all of the required modules,

70
00:05:38,000 --> 00:05:40,100
and once that's done,

71
00:05:41,010 --> 00:05:48,240
we can use the command npm start as they describe in the documentation, and it will show us the location

72
00:05:48,270 --> 00:05:49,860
of our server.

73
00:05:49,860 --> 00:05:56,010
So if we just click on it, open it inside Chrome, you'll see Word Mastermind running in the browser.

74
00:05:56,910 --> 00:05:57,710
Go ahead,

75
00:05:57,720 --> 00:05:58,650
have a guess,

76
00:05:58,680 --> 00:06:00,870
see what you have,

77
00:06:00,870 --> 00:06:09,630
and my personal starting, word top-secret is usually Notes or another word with R and T and S. But

78
00:06:09,630 --> 00:06:13,470
have fun playing with that and you can dig through the code.

79
00:06:13,470 --> 00:06:18,150
You can change it from Word Mastermind to anything else you want to call it.

80
00:06:18,150 --> 00:06:19,740
Or you can change the colors.

81
00:06:19,740 --> 00:06:27,270
You can modify the code base because you now own it on your own computer, and you can run it, and you

82
00:06:27,270 --> 00:06:34,650
can modify it. And you can see just how cool it is to be able to simply clone somebody else's entire

83
00:06:34,650 --> 00:06:39,780
code base that they've made open source for you to continue developing on it.

84
00:06:40,560 --> 00:06:49,290
So look through the code, open it up and take a look inside the dict folder to see all of the available

85
00:06:49,290 --> 00:06:50,040
words.

86
00:06:50,040 --> 00:06:51,630
There's no cheating here.

87
00:06:51,660 --> 00:06:57,430
They've also got other languages, and if you look inside the source folder, you'll be able to see

88
00:06:57,430 --> 00:07:00,340
the actual code that makes this game run.

89
00:07:00,340 --> 00:07:05,440
So you can see it's just simple JavaScript, which you know all about,

90
00:07:05,440 --> 00:07:11,470
and some of these things you might not understand, but through studying somebody else's code and modifying

91
00:07:11,470 --> 00:07:14,680
it, it usually makes you a much better developer.

92
00:07:15,010 --> 00:07:22,930
Go ahead, try to improve your own version, make it a 2.0 Wordle, whatever that means to you.

93
00:07:22,930 --> 00:07:27,340
And this is a big part of your developer journey.

94
00:07:27,460 --> 00:07:34,750
One of the best ways to improve your programming skills is to read other people's code, to understand

95
00:07:34,750 --> 00:07:41,380
what their code is doing, and most importantly, try to modify it just a little bit at the beginning

96
00:07:41,380 --> 00:07:43,630
and maybe a lot more in the future,

97
00:07:43,630 --> 00:07:50,920
but it gives you a way to level up your skill set by building on top of somebody else's work.

98
00:07:50,920 --> 00:07:56,020
And open source code is a great way to get started.

99
00:07:56,050 --> 00:07:58,840
You can clone somebody's repository.

100
00:07:58,840 --> 00:08:05,680
Take a look at some of the more interesting ones that we've listed here, such as Wordle or Quake.

101
00:08:05,710 --> 00:08:11,620
See roughly how things work and see if there are just small things that you might want to change about

102
00:08:11,620 --> 00:08:12,010
it.

103
00:08:12,010 --> 00:08:20,620
And this will lead you onto a very important step on your developer journey, which is contributing

104
00:08:20,650 --> 00:08:22,750
to open source code.

105
00:08:23,140 --> 00:08:25,300
Now there's a lot of projects.

106
00:08:25,300 --> 00:08:33,280
There's even a list of projects on GitHub where they have curated some projects which are particularly

107
00:08:33,280 --> 00:08:35,710
welcoming to first time contributors.

108
00:08:35,710 --> 00:08:41,919
So teams which are open for first timers or beginners to contribute.

109
00:08:41,919 --> 00:08:49,000
And you can take a look at that by going to awesome-for-beginners, this particular repository and take

110
00:08:49,000 --> 00:08:50,590
a look through the README. 

111
00:08:50,860 --> 00:08:58,210
Take a look at maybe the AncientBeast game, which is a Turn based strategy game,

112
00:08:58,210 --> 00:09:06,730
or take a look at the Brave Browser which has this concept of rewarding creators with crypto and providing

113
00:09:06,730 --> 00:09:10,420
an alternative to advertisement in browsers.

114
00:09:10,420 --> 00:09:16,630
You can contribute to all of these, but in order to know how to make a contribution, you need to learn

115
00:09:16,630 --> 00:09:24,160
about Pull Requests, Branches and Merging, which is exactly what we'll cover in the upcoming lessons.

116
00:09:24,160 --> 00:09:27,070
So for all of that and more, I'll see you there.

