1
00:00:00,170 --> 00:00:07,190
All right, guys, it's time for the final project of the module, which is an upgraded and up-styled

2
00:00:07,190 --> 00:00:09,340
Band Generator Project.

3
00:00:09,350 --> 00:00:15,890
So we're going to be building a dynamic website using EJS and all of the fun features that comes with EJS

4
00:00:16,309 --> 00:00:18,620
that we learned about in this module.

5
00:00:18,620 --> 00:00:24,700
So this is what we're going to be building a fully-styled and fully-functional Band Name Generator.

6
00:00:24,710 --> 00:00:31,190
We've got a button that's going to generate us random names that we can use for our band name or maybe

7
00:00:31,190 --> 00:00:34,010
for your startup name, whatever it is you want.

8
00:00:34,010 --> 00:00:40,370
And we're going to be practicing some of the things that we learned about EJS, Templating, Partials

9
00:00:40,370 --> 00:00:42,890
and all of the different tags that we've seen.

10
00:00:43,280 --> 00:00:49,970
Go ahead and download the starting project, unzip it and open it up inside VS Code.

11
00:00:50,450 --> 00:00:57,590
As always, we're going to start off by installing the required node modules using npm i

12
00:00:57,590 --> 00:01:05,640
and once you've done that you can use Nodemon to run the solution.js so that you can see what

13
00:01:05,640 --> 00:01:07,260
it should look like.

14
00:01:07,260 --> 00:01:13,740
So let's go to our localhost:3000 with our server up and running using the solution files, you can

15
00:01:13,740 --> 00:01:20,520
see that the first thing that happens is we get an h1 that says, "Welcome to the Band Generator." And we've

16
00:01:20,520 --> 00:01:27,720
got a button that's going to generate a new random band name each time we click on it.

17
00:01:27,720 --> 00:01:35,280
So maybe you want to call your new band, "boiling hearing", or maybe it should be "appropriate job".

18
00:01:35,490 --> 00:01:38,730
Actually, these are pretty good names, "moral hamburger".

19
00:01:38,850 --> 00:01:42,120
But notice some of the different parts of our website.

20
00:01:42,120 --> 00:01:46,500
We've got dynamically generated content being put onto the front end.

21
00:01:46,530 --> 00:01:54,960
We've got styling, we've got a footer that is generating dynamic code to figure out the current year

22
00:01:54,960 --> 00:01:57,210
that we're in to create the copyright.

23
00:01:57,270 --> 00:02:03,540
And if you look inside the index.js, you can see all of the different steps that are required to get

24
00:02:03,540 --> 00:02:07,520
this project up and running outlined for you.

25
00:02:07,560 --> 00:02:12,060
Follow the steps one by one, Step 1. through to Step 4.

26
00:02:12,060 --> 00:02:17,250
And I've got some hints in there which you can choose to ignore or you can use them.

27
00:02:17,250 --> 00:02:22,740
But either way, this is the end result that you are looking to achieve.

28
00:02:22,980 --> 00:02:27,210
Pause the video now and give this final project a go.

29
00:02:30,930 --> 00:02:31,500
All right.

30
00:02:31,500 --> 00:02:33,510
I hope you've managed to follow each of the steps.

31
00:02:33,510 --> 00:02:34,380
If you got stuck,

32
00:02:34,410 --> 00:02:39,150
use some of the hints and try to figure your way through the difficulties.

33
00:02:39,180 --> 00:02:41,210
Don't worry if you get stuck,

34
00:02:41,220 --> 00:02:43,620
that is the point of programming,

35
00:02:43,770 --> 00:02:51,330
as long as you push through and you learn something and you break through a barrier, any sort of barrier,

36
00:02:51,360 --> 00:02:54,750
a small barrier, then you're already achieving something.

37
00:02:54,780 --> 00:02:57,120
Let's run through the solution together.

38
00:02:57,540 --> 00:03:00,120
Step 1.  is to make the GET route work.

39
00:03:00,120 --> 00:03:04,800
So let's go ahead and res.render our index.js.

40
00:03:06,790 --> 00:03:08,530
And every step of the way,

41
00:03:08,530 --> 00:03:15,010
let's go ahead and test our result to make sure that it is doing what we want it to do.

42
00:03:15,280 --> 00:03:18,460
Let's go to our home page localhost:3000.

43
00:03:18,490 --> 00:03:20,440
We've got our h1 showing up.

44
00:03:20,440 --> 00:03:25,060
We've got our button showing up and that's pretty much step 1, complete.

45
00:03:25,660 --> 00:03:32,800
Step 2. is to make the generate name functionality work so that when we click on the "Generate Name"

46
00:03:32,800 --> 00:03:36,160
button, it should hit up this route

47
00:03:36,160 --> 00:03:42,850
and then we're going to randomly pick an adjective from this list of adjectives and randomly pick a

48
00:03:42,850 --> 00:03:52,480
noun from this list of nouns down here and then send it to index.ejs as a response and then make it show

49
00:03:52,480 --> 00:03:54,250
up in the h1.

50
00:03:54,460 --> 00:04:03,040
So in order to get our random adjective, we tap in to the array of adjectives, we use Math.random() to

51
00:04:03,040 --> 00:04:05,650
generate a random number between 0 and 1.

52
00:04:05,650 --> 00:04:13,220
Multiply it by the length of the array and then use Math.floor() in order to round it down to the nearest

53
00:04:13,220 --> 00:04:13,970
whole number,

54
00:04:13,970 --> 00:04:17,620
and then we use that to pick out an item from that array.

55
00:04:17,630 --> 00:04:21,430
So we learned about all of these things in our JavaScript modules.

56
00:04:21,440 --> 00:04:28,280
If this is at all confusing, be sure to revise the relevant sections in the JavaScript lessons.

57
00:04:28,640 --> 00:04:34,670
We do the same thing with our noun and then we're ready to send it over using re.render.

58
00:04:34,670 --> 00:04:42,200
So we're again rendering the index.ejs page, but this time we're passing in some local data.

59
00:04:42,230 --> 00:04:52,340
The data that we want to add is an adjective and that is going to be our const randomAdj, and then

60
00:04:52,340 --> 00:04:57,560
we're going to add a noun over as well, which is our randomNoun.

61
00:04:57,560 --> 00:05:06,560
Now in our index.ejs file, we can pick up these local variables under the name, adjective and noun.

62
00:05:06,560 --> 00:05:14,300
Let's go over to our views folder, find our index.ejs and complete the other part of step 2, which

63
00:05:14,300 --> 00:05:19,580
is to actually show our h1 as the adjective and noun.

64
00:05:19,580 --> 00:05:26,660
So we're going to need some EJS tags and we're going to need the one where we have an output showing to

65
00:05:26,660 --> 00:05:32,570
show our adjective and then after a space show our noun.

66
00:05:32,570 --> 00:05:35,480
So that way it's always adjective noun.

67
00:05:35,480 --> 00:05:38,240
So be like shining star,

68
00:05:38,270 --> 00:05:39,230
etcetera.

69
00:05:40,190 --> 00:05:43,250
Now let's just check to make sure this actually works.

70
00:05:43,250 --> 00:05:47,570
Let's hit Save, go back, click on "Generate Name,"

71
00:05:47,570 --> 00:05:51,470
we're getting these adjectives and nouns coming through.

72
00:05:52,220 --> 00:05:59,120
The other part of step two is we want to show the adjective and noun

73
00:05:59,120 --> 00:06:04,850
if the button is clicked and we actually get an adjective and noun sent over.

74
00:06:04,970 --> 00:06:12,920
But when we first load up our website to our home page, we only want it to show the default h1.

75
00:06:12,950 --> 00:06:19,370
Now, at the moment this doesn't work because we're trying to tap into a variable called adjective and

76
00:06:19,370 --> 00:06:26,990
one called noun that does not yet exist because it hasn't been sent over from the POST route.

77
00:06:27,230 --> 00:06:29,330
We've seen this previously,

78
00:06:29,330 --> 00:06:32,600
what we need to do is to add an if-statement.

79
00:06:32,960 --> 00:06:38,000
Let's go ahead and write our if-statement as if we were just writing normal JavaScript, even though

80
00:06:38,000 --> 00:06:49,580
we're inside an EJS file, which is basically HTML, we want to say if locals.adjective exists and

81
00:06:50,180 --> 00:06:58,700
locals.noun exists, then we're going to go ahead and render this h1,

82
00:06:58,700 --> 00:07:03,740
but otherwise we're going to render the default h1.

83
00:07:04,970 --> 00:07:12,560
And for all of this JavaScript to actually work, we of course need to add the relevant EJS tags to wrap

84
00:07:12,560 --> 00:07:21,860
around the JavaScript. And the syntax highlighting in our VS code should be good enough for us to see

85
00:07:21,860 --> 00:07:24,650
all the bits that we need to add this.

86
00:07:25,010 --> 00:07:31,310
So we got rid of all the errors, we've got our JavaScript in, and now let's hit Save and try it out

87
00:07:31,310 --> 00:07:31,970
again.

88
00:07:31,970 --> 00:07:33,680
Let's Refresh our home page.

89
00:07:33,680 --> 00:07:40,310
We get the default h1, click on the button, we get the h1 with the adjective and noun.

90
00:07:40,850 --> 00:07:44,090
So we're now ready for Step 3.

91
00:07:44,390 --> 00:07:47,210
Step 3 is to make our styling show up.

92
00:07:47,210 --> 00:07:54,680
So we've got all of these CSS code in our main.css, inside a folder called styles, inside a folder

93
00:07:54,680 --> 00:07:55,850
called public.

94
00:07:56,060 --> 00:08:00,320
Firstly, the hint is CSS files are static files.

95
00:08:00,320 --> 00:08:02,660
So that was my hint for you to remember

96
00:08:02,660 --> 00:08:05,960
we need to use the middleware, which is express.static

97
00:08:06,030 --> 00:08:13,650
and then we can add in the location of our static files, which is basically in the path

98
00:08:13,650 --> 00:08:15,570
of the public folder.

99
00:08:15,900 --> 00:08:23,380
Now the next step is to add in the CSS. In our header.ejs where we have the head tag.

100
00:08:23,400 --> 00:08:28,290
That's where we usually have our link to the style sheet.

101
00:08:28,630 --> 00:08:35,190
The style sheet is going to be at a path that's relative to where we specified our static folder,

102
00:08:35,190 --> 00:08:41,520
so in the public folder. So starting from the public folder, in order to navigate to main.css,

103
00:08:41,549 --> 00:08:54,390
we have to go to styles/main.css. And now we need to inject this header into the index.ejs

104
00:08:54,420 --> 00:08:55,520
right here.

105
00:08:55,530 --> 00:09:03,480
We're going to use that special EJS tag, angle bracket, percentage, minus, "include" and then it's the path to

106
00:09:03,480 --> 00:09:06,550
the header file, which is relative to the views folder.

107
00:09:06,550 --> 00:09:11,140
So it's partials/header.ejs.

108
00:09:11,860 --> 00:09:17,470
Let's close off the bracket and let's make sure we add our footer as well.

109
00:09:17,470 --> 00:09:21,040
So just change this to footer, hit Save.

110
00:09:21,070 --> 00:09:27,370
Let's go back to our home page and go to the root localhost:3000.

111
00:09:27,400 --> 00:09:35,830
We can see our styling being applied both when we go to the root and also when we submit the button

112
00:09:35,830 --> 00:09:38,170
and generate our band names.

113
00:09:38,260 --> 00:09:42,490
Now the last thing we need to fix is this part that comes from the footer.

114
00:09:42,670 --> 00:09:48,400
So if we take a look at step 4, it's to add a dynamic year to the footer.

115
00:09:48,640 --> 00:09:56,200
Normally you'll see copyright, copyright symbol and then the year, so it'll be 2000 and something,

116
00:09:56,200 --> 00:09:56,700
right?

117
00:09:56,710 --> 00:10:03,520
But you'll see a lot of people who write this and I am also lazy in that way.

118
00:10:03,520 --> 00:10:07,900
Sometimes you just put the current year and then two years past and it looks kind of silly.

119
00:10:07,900 --> 00:10:16,450
So a really simple way is of course to use JavaScript to get the actual current year and then to insert

120
00:10:16,450 --> 00:10:17,920
it into the footer.

121
00:10:18,160 --> 00:10:19,450
Let's take a look at the footer.ejs

122
00:10:20,350 --> 00:10:28,270
This is where our step 4 is, and we basically want to replace this 200X with a dynamic year.

123
00:10:28,510 --> 00:10:40,030
If you don't know how to get the current year using JavaScript, then we can always Google and StackOverflow

124
00:10:40,030 --> 00:10:42,070
tells us this is how we do it.

125
00:10:42,100 --> 00:10:44,080
new Date().getFullYear().

126
00:10:44,110 --> 00:10:50,290
We've already used new Date() many times to generate the current date and then by using the getFullYear()

127
00:10:50,290 --> 00:10:52,960
method, we can pull out the current year.

128
00:10:53,110 --> 00:10:58,750
Essentially, this line of code is what we need to insert into our footer.

129
00:10:59,140 --> 00:11:06,910
I wanted you to remember that in order to generate JavaScript code that can have an output, we use

130
00:11:06,910 --> 00:11:19,210
this set of EJS tags and then it's just a case of adding the new Date.getFullYear and let's hit Save.

131
00:11:19,210 --> 00:11:27,490
And let's go back to our home page and Refresh the homepage and you can see the current year show up

132
00:11:27,490 --> 00:11:28,660
at the bottom.

133
00:11:29,020 --> 00:11:29,950
There you have it.

134
00:11:29,950 --> 00:11:32,470
That's the whole project completed.

135
00:11:32,470 --> 00:11:39,430
It looks pretty cool and it uses all the things that you learned in this module and hopefully, you were

136
00:11:39,430 --> 00:11:44,710
able to revise and practice some of the things you learned by building this awesome website.

137
00:11:44,710 --> 00:11:51,490
And if you come up with a genius idea based on your own website, be sure to share it in the Q&A and

138
00:11:51,490 --> 00:11:58,150
let me know what your band, "easy-going gerbil" or "silky oak" is all about.

139
00:11:58,150 --> 00:11:59,590
Maybe linked to your SoundCloud,

140
00:11:59,590 --> 00:12:00,910
I'd love to check it out.

