1
00:00:00,300 --> 00:00:05,850
Hey guys, in this lesson, I want to introduce you to the concept of environment variables.

2
00:00:05,850 --> 00:00:12,240
And again, similar to the previous lesson, this is not so much about our users about keeping their

3
00:00:12,240 --> 00:00:13,410
data safe.

4
00:00:13,410 --> 00:00:16,500
It's more about keeping your data safe.

5
00:00:16,500 --> 00:00:17,970
So what do I mean by that?

6
00:00:17,970 --> 00:00:24,360
In the last lesson you saw that we created session and we had to create an encryption key, a secret.

7
00:00:24,360 --> 00:00:32,070
And keeping that secret in our index.js, which, as you may know, is often uploaded to GitHub.

8
00:00:32,070 --> 00:00:35,400
Or you might need to put that onto your server.

9
00:00:35,400 --> 00:00:39,330
Either way, that information is very, very easily leaked.

10
00:00:39,330 --> 00:00:47,040
It's very easy for people to crawl GitHub looking out for these secrets and API keys that they can take

11
00:00:47,040 --> 00:00:47,970
advantage of.

12
00:00:47,970 --> 00:00:54,510
And very often in the development world, you hear stories like this where a developer put AWS keys

13
00:00:54,510 --> 00:00:55,350
on GitHub.

14
00:00:55,350 --> 00:00:57,300
Then bad things happen.

15
00:00:57,300 --> 00:01:02,700
And it's because currently we're in a bitcoin mining frenzy era.

16
00:01:02,700 --> 00:01:07,380
And to mine Bitcoin, you need a lot of computing resources.

17
00:01:07,380 --> 00:01:14,730
And those resources get directly turned into money, providing a huge incentive for people to scrape

18
00:01:14,730 --> 00:01:19,980
the internet for developers who've accidentally published their secret keys.

19
00:01:20,310 --> 00:01:26,670
And this is a good story as well, that, um, I'll link to in the course resources, where this guy

20
00:01:26,670 --> 00:01:35,340
Luke had accidentally published his API keys onto GitHub, and then he racked up an AWS bill of over

21
00:01:35,340 --> 00:01:39,360
$3,000 in a very, very short space of time.

22
00:01:39,360 --> 00:01:42,840
Now, I think the ending to the story was a happy one.

23
00:01:42,840 --> 00:01:50,190
An Amazon AWS actually refunded him the money, but I'm not sure everybody is as lucky as he was.

24
00:01:50,580 --> 00:01:58,320
These are some really cautionary tales about keeping your secrets, your API keys off the internet,

25
00:01:58,320 --> 00:02:01,680
where it's publicly searchable, where people can steal.

26
00:02:02,190 --> 00:02:06,540
That's all very well and good, but how exactly do we do that?

27
00:02:06,540 --> 00:02:13,860
Because obviously for our app to work, we need these secrets to be able to encrypt our database.

28
00:02:13,860 --> 00:02:21,000
And for us to be able to collaborate with other people or simply just using version control or backing

29
00:02:21,000 --> 00:02:24,870
up our project to GitHub, then we will need to publish it.

30
00:02:24,870 --> 00:02:25,320
Right?

31
00:02:25,320 --> 00:02:32,910
So the way that developers solve this conundrum is through using something called environment variables.

32
00:02:33,030 --> 00:02:36,600
What exactly are these environment variables used for?

33
00:02:36,600 --> 00:02:39,840
Well, there's two major use cases.

34
00:02:39,840 --> 00:02:42,270
One is for convenience.

35
00:02:42,480 --> 00:02:49,710
Normally when you deploy a large application, the process is quite complicated.

36
00:02:49,710 --> 00:02:55,860
And once you've done it, you kind of don't want to mess around with the code base and update the code

37
00:02:55,860 --> 00:02:56,490
files.

38
00:02:56,610 --> 00:03:03,060
Instead, you could have these environment variables which you can change so certain variables that

39
00:03:03,060 --> 00:03:08,790
are being used in your code base could be set as environment variables, and you could modify those

40
00:03:08,790 --> 00:03:11,310
variables without having to touch the code.

41
00:03:11,940 --> 00:03:15,270
A second reason might be for security.

42
00:03:15,270 --> 00:03:20,640
So when you're developing software, you might be uploading your code base somewhere.

43
00:03:20,640 --> 00:03:27,540
And it's usually not a good idea to have things like your authentication keys or your API keys to be

44
00:03:27,540 --> 00:03:31,110
stored in the same place as the rest of your code.

45
00:03:31,380 --> 00:03:33,720
That's where environment variables come in.

46
00:03:33,720 --> 00:03:40,620
So environment variables essentially allows us to separate out where we store our keys, our secret

47
00:03:40,620 --> 00:03:46,230
stuff, and various other variables away from where our code base is located.

48
00:03:46,740 --> 00:03:53,880
Environment variables are basically a very, very simple file that we're going to keep certain sensitive

49
00:03:53,880 --> 00:03:57,990
variables, such as encryption keys and API keys.

50
00:03:58,140 --> 00:04:06,030
In this lesson, I want to show you how we can do this using a really popular package called dot env.

51
00:04:06,030 --> 00:04:12,420
And you can see just through the sheer number of weekly downloads that it is a really heavily dependent

52
00:04:12,420 --> 00:04:19,230
upon module to keep everybody's secrets off of the internet safe and secure.

53
00:04:19,950 --> 00:04:20,310
All right.

54
00:04:20,310 --> 00:04:26,190
So let's get started and see how we can implement environment variables in our project and save those

55
00:04:26,190 --> 00:04:28,920
secrets and keep the secrets secret.

56
00:04:29,550 --> 00:04:35,490
Go ahead and download and extract the folder called 9.4 Environment Variables.

57
00:04:35,490 --> 00:04:41,970
And if you look inside package.json, the package that we're using to create these environment variables

58
00:04:41,970 --> 00:04:43,770
is called dot env.

59
00:04:44,550 --> 00:04:53,610
If you're not already there, then stop your server CD over to this particular module and go ahead and

60
00:04:53,610 --> 00:04:58,470
run npm install to install that new package.

61
00:04:58,950 --> 00:05:06,930
Once you've done that, the next step we need to do in order to move this secret out of our index.js

62
00:05:06,960 --> 00:05:09,810
is to create a file inside this folder.

63
00:05:09,810 --> 00:05:13,800
So at the top level so you can collapse the folder, open the folder.

64
00:05:13,800 --> 00:05:17,250
And here you're going to click on this button to add a file.

65
00:05:17,250 --> 00:05:23,340
Now whereas normally files end with an extension like dot jpeg or dot png.

66
00:05:23,370 --> 00:05:29,670
In this case we're only going to give the file an extension name and it's dot e env.

67
00:05:29,820 --> 00:05:34,800
And if you get it right you should see that on the left hand side you get this little gear icon.

68
00:05:34,800 --> 00:05:35,430
Show up.

69
00:05:35,430 --> 00:05:41,160
Now if you don't see any of these icons on your VSCode, it's probably because you don't have this extension

70
00:05:41,160 --> 00:05:41,610
installed.

71
00:05:41,610 --> 00:05:42,330
It's free.

72
00:05:42,330 --> 00:05:47,520
We covered it at the beginning of the course, but it's called VSCode icons, and you can add that and

73
00:05:47,520 --> 00:05:49,920
it'll give you these pretty little icons to work with.

74
00:05:50,280 --> 00:05:52,410
So how do we move this out?

75
00:05:52,410 --> 00:05:58,860
Well, literally I am just going to cut my secret and paste it into here.

76
00:05:58,860 --> 00:06:00,720
Now I'm going to give it a name.

77
00:06:00,720 --> 00:06:04,980
I'm going to call it session Underscore secret.

78
00:06:04,980 --> 00:06:10,530
And this allows us to see some of the formatting of how environment variables are added.

79
00:06:10,530 --> 00:06:14,400
First we have a name for that variable.

80
00:06:14,400 --> 00:06:17,190
And notice how there's no constructor in front of it.

81
00:06:17,190 --> 00:06:19,170
There's no const or var or whatever.

82
00:06:19,170 --> 00:06:20,850
This is not actually JavaScript.

83
00:06:20,850 --> 00:06:25,350
This is just a way for us to give this piece of information a name.

84
00:06:25,350 --> 00:06:31,200
And everything is in all caps, and each word is separated by an underscore.

85
00:06:31,410 --> 00:06:33,480
And then we have an equal sign.

86
00:06:33,480 --> 00:06:37,110
And then we have a string enclosed in double quotes.

87
00:06:37,110 --> 00:06:43,080
That string is going to be whatever information is going to be associated with that name.

88
00:06:43,080 --> 00:06:49,080
The other thing to notice is that there's no space between the start and the end of the equal sign.

89
00:06:49,080 --> 00:06:57,570
And also, if you were to create another variable here, you don't have any sort of commas or semicolons

90
00:06:57,570 --> 00:06:57,990
or anything.

91
00:06:57,990 --> 00:06:59,970
You just start it on a new line.

92
00:07:00,840 --> 00:07:03,150
Now that we've got that, let's go ahead and save that.

93
00:07:03,150 --> 00:07:04,980
Go back to our index.js.

94
00:07:04,980 --> 00:07:07,560
What do we replace this part with?

95
00:07:07,560 --> 00:07:16,140
Well, we replace it with process which is a NodeJS process tapping into env which is an environment

96
00:07:16,140 --> 00:07:21,900
variable property, and it contains the user environment.

97
00:07:21,900 --> 00:07:31,050
And then we tap in to the name that we gave it, which in my case was session to S's underscore secret.

98
00:07:31,440 --> 00:07:37,110
And this should tap into the environment that this current file is run in in the node process.

99
00:07:37,110 --> 00:07:41,190
And it tries to find the one that has this particular name right here.

100
00:07:41,190 --> 00:07:48,960
Now, in order to add this file into that environment, we need to use that dot env module that we imported

101
00:07:48,960 --> 00:07:49,620
earlier.

102
00:07:49,620 --> 00:07:55,710
So we're going to import env from dot m.

103
00:07:58,090 --> 00:07:59,530
Like so.

104
00:07:59,530 --> 00:08:02,440
And then we need to also initialize it.

105
00:08:02,440 --> 00:08:05,830
So we're going to write env dot config.

106
00:08:05,830 --> 00:08:12,760
And this is the one where it adds the dot env file contents into the process dot env so that we can

107
00:08:12,760 --> 00:08:14,680
actually have access to it.

108
00:08:14,680 --> 00:08:18,610
And that's all it takes to set up an environment variable.

109
00:08:18,970 --> 00:08:24,790
So now if we go ahead and run our code so we'll do index.js.

110
00:08:24,790 --> 00:08:28,960
And we go to our localhost and we log in.

111
00:08:28,960 --> 00:08:32,049
Everything still works exactly the same as before.

112
00:08:32,049 --> 00:08:40,960
And we still have our sessions persisting etc., but we no longer have that secret right here in the

113
00:08:40,960 --> 00:08:43,960
index.js for anyone to read.

114
00:08:44,320 --> 00:08:48,640
This is useful when we start thinking about things like professional development.

115
00:08:48,640 --> 00:08:51,400
We would have this probably under source control.

116
00:08:51,400 --> 00:08:57,460
So if you go into this tab here in VS code, you'll see initialized repository which you can click on

117
00:08:57,460 --> 00:09:04,330
which will initialize a new source control or in this case a new git repository for our project.

118
00:09:04,330 --> 00:09:08,050
And it can persist all of the things that you want to persist.

119
00:09:08,050 --> 00:09:13,300
Now, this includes all of the things that I have in all of the other projects, which is a little bit

120
00:09:13,300 --> 00:09:17,440
much, but it's essentially based on the top level.

121
00:09:17,800 --> 00:09:25,300
Now, what usually happens when you upload your files to GitHub or any other form of source control,

122
00:09:25,300 --> 00:09:32,440
or something like this, you normally will add the dot env file type to the git, ignore a completely

123
00:09:32,440 --> 00:09:39,700
separate file that's added to a git ignore list, which means that when we upload our project to GitHub

124
00:09:39,700 --> 00:09:47,230
or any other form of git, it doesn't go online where it could be seen by others, which means it does

125
00:09:47,230 --> 00:09:53,470
not get added to git and given access to other people.

126
00:09:53,470 --> 00:09:54,340
To see.

127
00:09:54,520 --> 00:10:01,480
If you take a look at this URL or simply just search for GitHub node, the GitHub team themselves have

128
00:10:01,480 --> 00:10:06,880
actually come up with a list of common things that you should probably ignore if you're making a node

129
00:10:06,880 --> 00:10:13,900
project, and these things include things which are very large, such as any node modules, because

130
00:10:13,900 --> 00:10:16,420
all the dependencies are added together, is a ton of code.

131
00:10:16,420 --> 00:10:18,340
You don't want to be uploading downloading that.

132
00:10:18,340 --> 00:10:24,040
That's why I always get you to do npm install just to get used to the practice, even though we're downloading

133
00:10:24,040 --> 00:10:24,850
through zip files.

134
00:10:24,850 --> 00:10:30,910
But in the future, if you're working on open source projects, if you're working in a company, you're

135
00:10:30,910 --> 00:10:37,450
very often going to be pulling data from a GitHub repository or pushing data to GitHub.

136
00:10:37,450 --> 00:10:42,070
And it's important that you don't end up uploading this up and down all the time.

137
00:10:42,580 --> 00:10:48,850
Now, the other thing that you'll see in here, which makes sense for us, is our dot env files.

138
00:10:48,850 --> 00:10:51,880
So you can add other types of dot env.

139
00:10:51,880 --> 00:10:57,910
So you can specify one which is just for local development, one which is for production local etc.

140
00:10:57,910 --> 00:11:02,410
but the one that we care about the most is pretty much the bog standard dot env.

141
00:11:02,410 --> 00:11:06,280
And this is also ignored for git, which is important.

142
00:11:06,280 --> 00:11:09,220
So let me just demo to you what this actually looks like.

143
00:11:09,220 --> 00:11:10,780
So I'm going to copy this file.

144
00:11:10,780 --> 00:11:15,430
And I'm going to create a new window where I'm going to create a new project.

145
00:11:15,820 --> 00:11:17,530
So here's a brand new project.

146
00:11:17,530 --> 00:11:19,630
Let me just go ahead and create something.

147
00:11:19,630 --> 00:11:27,760
Let's say we CD to the desktop and I make deer create git env test.

148
00:11:28,240 --> 00:11:31,180
And we go into that.

149
00:11:31,180 --> 00:11:32,830
So open that folder.

150
00:11:38,140 --> 00:11:41,170
And we open it in our VS code.

151
00:11:41,200 --> 00:11:46,540
Let me just create something code not so secret dot js.

152
00:11:46,660 --> 00:11:51,850
And then inside here we can have whatever it is we want.

153
00:11:52,000 --> 00:11:54,280
Um I'm just going to have some text in here.

154
00:11:54,280 --> 00:12:02,740
And then I'm going to add a dot env file which is going to contain my top top top secrets.

155
00:12:02,890 --> 00:12:08,170
And now I'm going to create this as a repository.

156
00:12:08,170 --> 00:12:15,370
So in the source control tab I'm going to create repository I'm going to create an initial commit I'm

157
00:12:15,370 --> 00:12:17,110
going to stage everything.

158
00:12:17,110 --> 00:12:24,700
And I'm going to publish this branch to a public GitHub repository under my username.

159
00:12:24,700 --> 00:12:27,850
So now I should be able to open it up inside GitHub.

160
00:12:27,850 --> 00:12:33,190
And you will see both of these things dot env and not so secret.

161
00:12:33,190 --> 00:12:38,530
So dot env contains all of my top top secrets which I don't want anybody to know about.

162
00:12:38,530 --> 00:12:41,380
And this is really, really bad for me.

163
00:12:42,010 --> 00:12:44,710
So let's do it properly this time.

164
00:12:44,710 --> 00:12:47,470
Let's show you how we should be doing things.

165
00:12:47,470 --> 00:12:53,050
So let's go ahead and CD back and I'm going to make a new directory.

166
00:12:53,050 --> 00:12:58,600
Let's call this proper way to get Env.

167
00:12:59,380 --> 00:13:00,340
There we go.

168
00:13:00,340 --> 00:13:04,510
And let's go ahead and open that up here instead.

169
00:13:10,670 --> 00:13:18,710
And in here I'm going to again use my let's say we have our index.js which needs to exist, have some

170
00:13:18,710 --> 00:13:20,690
code, whatever it may be.

171
00:13:21,380 --> 00:13:29,510
And then we have our next file which is our dot env containing our top secrets.

172
00:13:33,700 --> 00:13:36,460
And now what I'm going to do is actually create my.

173
00:13:36,460 --> 00:13:37,150
Gitignore.

174
00:13:37,150 --> 00:13:44,260
So it is simply dot git ignore one word no spaces.

175
00:13:44,260 --> 00:13:51,160
And then I'm going to copy all of these things from that repository that GitHub created.

176
00:13:51,160 --> 00:13:57,580
Paste it in here, save this and then go to my source control initialize repository.

177
00:13:57,580 --> 00:13:59,560
As I have done before.

178
00:13:59,590 --> 00:14:00,760
Commit.

179
00:14:00,760 --> 00:14:06,610
Add everything to staging and then publish the branch to a public repository.

180
00:14:06,940 --> 00:14:12,550
Once that's done, let's go ahead and open it up in GitHub and you can see that thankfully this time

181
00:14:12,550 --> 00:14:19,180
I didn't have to remember to remove my env or to remove any of the other things because my git ignore

182
00:14:19,180 --> 00:14:26,560
already tells me don't upload these terribly secret things, and that means I don't end up with somebody

183
00:14:26,560 --> 00:14:29,860
stealing my API keys, which is very important.

184
00:14:30,130 --> 00:14:38,890
So let these stories serve as a warning and remember to always think about adding a dot.

185
00:14:38,890 --> 00:14:40,390
Gitignore file.

186
00:14:40,390 --> 00:14:45,310
Whenever you start thinking about using git, which should be at the very beginning.

187
00:14:45,310 --> 00:14:54,190
Anyways, in this lesson you've seen how we can use the dot env package to add files in the dot env

188
00:14:54,190 --> 00:15:00,310
file to the local variable, but I want you to have a little go practicing this.

189
00:15:00,310 --> 00:15:05,620
If you take a look at the other part of our code, which really should probably be in environment variables

190
00:15:05,620 --> 00:15:08,170
is our database setup.

191
00:15:08,170 --> 00:15:13,300
Now normally your database would not be localhost, it would be hosted remotely.

192
00:15:13,300 --> 00:15:19,900
So anybody with the database access the username and the password would be able to access that database,

193
00:15:19,900 --> 00:15:21,490
which is not what you want.

194
00:15:21,490 --> 00:15:28,270
So let's prepare for this by switching out the user, the host, the database, the password and the

195
00:15:28,270 --> 00:15:31,540
port all into environment variables.

196
00:15:31,540 --> 00:15:34,870
See if you can remember how to do this and we'll run through it together.

197
00:15:38,760 --> 00:15:39,330
All right.

198
00:15:39,330 --> 00:15:44,250
So remember that every single new environment variable has to go on a new line.

199
00:15:44,250 --> 00:15:49,470
And I'm going to paste in something I made earlier just to speed things up a bit for you.

200
00:15:49,470 --> 00:15:50,940
And I'm giving a description.

201
00:15:50,940 --> 00:15:56,490
This is PG Postgres user host database password and port.

202
00:15:56,490 --> 00:15:59,220
I've saved each of those values as a string.

203
00:15:59,220 --> 00:16:00,810
No spaces anywhere.

204
00:16:00,810 --> 00:16:10,170
And now I can go back into my database and replace all of this plain text in here with process dot env

205
00:16:11,370 --> 00:16:12,060
dot.

206
00:16:12,060 --> 00:16:15,120
In this case it's pg underscore user.

207
00:16:15,810 --> 00:16:20,250
And you can go through that process for the rest of the lines.

208
00:16:20,250 --> 00:16:27,120
So now if somebody looked at our index.js they would say wow, there's all of this secret information

209
00:16:27,120 --> 00:16:28,470
that I can't get access to.

210
00:16:28,470 --> 00:16:29,940
I don't know what your password is.

211
00:16:29,940 --> 00:16:31,950
I don't know what your session secrets are.

212
00:16:31,950 --> 00:16:36,270
This doesn't tell me anything that I can do anything bad with.

213
00:16:36,270 --> 00:16:38,040
And that's exactly what we want.

214
00:16:38,040 --> 00:16:42,120
So hopefully you will have seen how environment variables work.

215
00:16:42,120 --> 00:16:49,050
And if you're working with any project which requires a API key, especially one which is paid, remember

216
00:16:49,050 --> 00:16:51,810
this lesson and come back to it if necessary.

217
00:16:51,810 --> 00:16:57,540
In the next lesson, we're going to get back on to upgrading the security level of our website.

218
00:16:57,540 --> 00:17:03,690
And instead of storing users passwords ourselves, having to try and make sure people don't hack into

219
00:17:03,690 --> 00:17:09,869
our database, encrypting, salting, hashing, all of that, we're going to put all of that responsibility

220
00:17:09,869 --> 00:17:12,270
onto a big company like Google.

221
00:17:12,270 --> 00:17:14,880
So we're going to learn about Google OAuth.

222
00:17:14,880 --> 00:17:17,310
So for all of that and more I'll see you there.

