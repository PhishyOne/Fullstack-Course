1
00:00:00,350 --> 00:00:04,610
All right, guys, in this module, I'm going to teach you something really, really cool and really

2
00:00:04,610 --> 00:00:09,260
useful as well for any technology Web Development or Back-end Development,

3
00:00:09,260 --> 00:00:11,660
the Command Line is going to be your friend.

4
00:00:12,300 --> 00:00:13,840
So what is the Bash shell?

5
00:00:13,860 --> 00:00:17,460
Well, to understand the Bash shell, we first have to know what a Shell is.

6
00:00:17,490 --> 00:00:20,830
And this graphic is a good way of tackling that.

7
00:00:20,850 --> 00:00:26,550
If you think about your operating system as a Pistachio nut, then the Kernel.

8
00:00:26,550 --> 00:00:29,310
So the actual Pistachio, the thing that you're going to eat.

9
00:00:29,310 --> 00:00:31,350
I'm really sorry about all the food analogies.

10
00:00:31,350 --> 00:00:36,540
You can clearly tell I'm pretty much hungry most of the time when I'm recording these videos, but let's

11
00:00:36,540 --> 00:00:37,740
get back to the topic.

12
00:00:38,040 --> 00:00:43,620
If you're operating system is a Pistachio, then the actual nut is the Kernel.

13
00:00:43,620 --> 00:00:50,220
And in computing, the Kernel refers to the actual program that interfaces with the hardware.

14
00:00:50,220 --> 00:00:53,530
So it's the core of your operating system.

15
00:00:53,550 --> 00:01:02,760
Now the Shell in computing refers to the user interface for you as a human to be able to interact with

16
00:01:02,760 --> 00:01:06,330
the kernel and in turn with the hardware of your computer.

17
00:01:06,330 --> 00:01:09,210
And there's two variants to the shell.

18
00:01:09,240 --> 00:01:12,460
There are Graphical User Interface Shells,

19
00:01:12,460 --> 00:01:19,210
so for example, when you open up Finder, you're using a graphical user interface to access and find

20
00:01:19,210 --> 00:01:20,170
your files,

21
00:01:20,170 --> 00:01:25,630
but there's also a Command Line Interface, which is what we're going to be talking about and what we're

22
00:01:25,630 --> 00:01:27,760
going to be learning about in this module.

23
00:01:27,760 --> 00:01:32,050
So this is an alternative way of interfacing with the kernel.

24
00:01:32,080 --> 00:01:37,810
Now it can seem intimidating at first, but I want to show you that it's actually super simple.

25
00:01:37,810 --> 00:01:42,490
And once you understand it, you're going to see that it's actually a really, really useful tool at

26
00:01:42,490 --> 00:01:43,630
your disposal.

27
00:01:43,930 --> 00:01:49,600
Coming back to the shell that we're going to be using, which is a Bash Shell, and it stands for The

28
00:01:49,600 --> 00:01:56,170
Bourne Again Shell and it's named after a Mr. Bourne but not this Mr. Bourne But this.

29
00:01:56,170 --> 00:01:56,470
Mr. Bourne,

30
00:01:56,470 --> 00:01:59,980
and I can attest that they are equally badass.

31
00:01:59,980 --> 00:02:08,680
And the Bourne Again,Shell or the Bash Shell is a CLI or a Command Line Interpreter for the Unix system.

32
00:02:08,680 --> 00:02:14,950
And you find Unix-based systems or Unix-like systems all over the place.

33
00:02:14,950 --> 00:02:23,620
So for example, Linux is a Unix-like system and a lot of servers will run on Unix and even Mac OS 10

34
00:02:23,620 --> 00:02:30,730
or the newly named Mac OS runs on a Unix-like operating system.

35
00:02:30,730 --> 00:02:38,230
And this is a completely different family from the Windows side of things, which uses Dos and Windows.

36
00:02:38,260 --> 00:02:43,240
A lot of things that you can do with command line can be done using the graphical user interface,

37
00:02:43,240 --> 00:02:46,090
so why use the command line at all?

38
00:02:46,090 --> 00:02:51,220
At the end of the day, what it all boils down to is about greater control.

39
00:02:51,220 --> 00:02:59,500
And in your journey of becoming a better developer, you will need to understand and exert more power

40
00:02:59,500 --> 00:03:00,820
over your tools.

41
00:03:00,820 --> 00:03:02,740
That is the computer hardware.

42
00:03:02,740 --> 00:03:08,440
But on a more day to day basis, you will find that if you're a regular command line user, that it's

43
00:03:08,470 --> 00:03:13,570
actually easier and faster to do a lot of really common things.

44
00:03:13,570 --> 00:03:19,750
For example, inside the Terminal, if I wanted to make a music folder, then it's as simple as

45
00:03:19,750 --> 00:03:21,340
"mkdir Music."

46
00:03:21,340 --> 00:03:24,730
And now there it is, there's my music folder.

47
00:03:24,730 --> 00:03:29,800
But if I want to do Inside Finder, for example, I first have to go to Finder.

48
00:03:29,830 --> 00:03:37,120
I have to navigate to my desktop or whichever directory I want to create it inside and then I have to

49
00:03:37,120 --> 00:03:43,840
maybe right-click new folder and then type something like music, right?

50
00:03:43,960 --> 00:03:45,760
And that takes a lot of effort.

51
00:03:45,760 --> 00:03:51,760
Whereas you know, say if I wanted to create music to make another folder, it's as simple as hitting

52
00:03:51,760 --> 00:03:53,410
the up arrow and hitting 2.

53
00:03:53,410 --> 00:03:58,480
So for me, it's a lot about speed and a lot about control.

54
00:03:58,840 --> 00:04:04,810
The other thing that you'll notice about a lot of these graphical user interfaces is they try to hide

55
00:04:04,810 --> 00:04:11,470
a lot of the complicated stuff or the unnecessary stuff like configuration files from the common user.

56
00:04:11,470 --> 00:04:15,640
And the idea is that, you know, unless you know how to deal with it, then you probably shouldn't

57
00:04:15,640 --> 00:04:16,720
be dealing with it.

58
00:04:16,959 --> 00:04:22,660
But with the command line, you have full control and you have a lot of flexibility.

59
00:04:22,660 --> 00:04:29,620
So for example, on my desktop, you can only see one folder with no files called App Development,

60
00:04:29,620 --> 00:04:29,890
right?

61
00:04:29,890 --> 00:04:36,400
So I'm on my desktop at the moment Inside Finder, but actually, if you use Terminal, you can actually

62
00:04:36,400 --> 00:04:37,960
list all the files.

63
00:04:37,960 --> 00:04:43,240
And if I just I add this "-a" flag, you can actually see that I've also got a folder called Secret

64
00:04:43,240 --> 00:04:50,110
Stuff and you can create these hidden folders by simply writing mkdir, say secrets.

65
00:04:50,110 --> 00:04:54,820
And now if I list again, I've now got two secret folders.

66
00:04:54,820 --> 00:05:00,280
And later on, when we're going to teach you Git and Version control, we're going to be using the command

67
00:05:00,280 --> 00:05:08,050
line really heavily to show you the easiest and probably the most popular way amongst developers, at

68
00:05:08,050 --> 00:05:10,600
least, of using Git and Version Control.

69
00:05:10,600 --> 00:05:11,920
So I hope I've sold you on.

70
00:05:12,060 --> 00:05:14,640
The virtues of the command line.

71
00:05:14,640 --> 00:05:19,460
So without further ado, let's get started learning how to use it.

72
00:05:19,470 --> 00:05:23,820
What are some of the most common commands and some tips and tricks as well.

