<!DOCTYPE html>
<html>

<head>
    <title>EE PlayInt</title>
    <link rel="stylesheet" href="/project29/css/main.css">
</head>

<body>
    <div class="container">
        <h1>Eve Echoes Player Intelligence</h1>

        <!-- Search Box -->
        <div class="search-box">
            <form id="playerForm" action="/project29/submit" method="GET">
                <label for="playerInput">Enter Player Name:</label>
                <input type="text" id="playerInput" name="name" placeholder="(Case Sensitive)" required />
                <input type="submit" value="Search" />
            </form>
        </div>

        <!-- Loading Spinner -->
        <div id="loading" style="display:none; text-align:center; margin-top:20px;">
            <p>Fetching all kills and losses â€” this may take a few seconds...</p>
            <div class="spinner"></div>
        </div>

        <!-- Error -->
        <% if (typeof error !=="undefined" && error) { %>
            <p style="color:red;">
                <%= error %>
            </p>
            <% } %>

                <!-- Player Name -->
                <% if (playerName) { %>
                    <h2>Results for <%= playerName %>
                    </h2>
                    <% } %>

                        <% // Safe helper function function getColor(count, maxCount) { if (!maxCount) return '#00ff00'
                            ; const ratio=count / maxCount; const r=Math.floor(255 * ratio); const g=Math.floor(255 * (1
                            - ratio)); const b=0; return 'rgb(' + r + ',' + g + ',' + b + ')' ; } %>

                            <!-- Collapsible Top Regions -->
                            <% if (topRegions && topRegions.length) { %>
                                <h3>Top 5 Regions</h3>
                                <ul class="tree">
                                    <% const maxRegionCount=Math.max(...topRegions.map(r=> r.count)); %>
                                        <% topRegions.forEach(region=> {
                                            const regionColor = getColor(region.count, maxRegionCount);
                                            const maxConstellationCount = region.maxConstellationCount;
                                            %>
                                            <li>
                                                <span class="caret">
                                                    <span class="color-dot"
                                                        style="background-color:<%= regionColor %>"></span>
                                                    <%= region.region %> (<%= region.percent %>%)
                                                </span>
                                                <ul class="nested">
                                                    <% region.constellations.forEach(con=> {
                                                        const conColor = getColor(con.count, maxConstellationCount);
                                                        %>
                                                        <li>
                                                            <span class="caret">
                                                                <span class="color-dot"
                                                                    style="background-color:<%= conColor %>"></span>
                                                                <%= con.name %> (<%= con.percent %>%)
                                                            </span>
                                                            <ul class="nested">
                                                                <% con.systems.forEach(sys=> {
                                                                    const sysColor = getColor(sys.count,
                                                                    maxSystemCount);
                                                                    %>
                                                                    <li>
                                                                        <span class="color-dot"
                                                                            style="background-color:<%= sysColor %>"></span>
                                                                        <%= sys.name %> (<%= sys.percent %>%)
                                                                    </li>
                                                                    <% }) %>
                                                            </ul>
                                                        </li>
                                                        <% }) %>
                                                </ul>
                                            </li>
                                            <% }) %>
                                </ul>
                                <% } else { %>
                                    <p>No region data available.</p>
                                    <% } %>

                                        <!-- Hourly Activity Chart -->
                                        <% if (hourlyPercentages && hourlyPercentages.length) { %>
                                            <h2>Activity by Hour</h2>
                                            <div id="hourly-chart">
                                                <% hourlyPercentages.forEach((percent, hour)=> {
                                                    const barHeight = percent * 3;
                                                    const paddedHour = String(hour).padStart(2, '0');
                                                    %>
                                                    <div class="hour-column">
                                                        <div class="hour-bar" style="height:<%= barHeight %>px;"></div>
                                                        <div class="hour-label">
                                                            <%= paddedHour %>:00 UTC
                                                        </div>
                                                    </div>
                                                    <% }) %>
                                            </div>
                                            <p>Each bar height represents % of total kills/losses for that hour.</p>
                                            <% } %>

    </div>

    <!-- Scripts -->
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const spinner = document.getElementById("loading");

            if (spinner) spinner.style.display = "none";

            const form = document.getElementById("playerForm");
            if (form) {
                form.addEventListener("submit", function () {
                    if (spinner) spinner.style.display = "block";
                });
            }

            // Collapsible tree: regions collapsed by default, expand all children when region opened
            document.querySelectorAll('.tree > li > .caret').forEach(regionCaret => {
                regionCaret.addEventListener('click', () => {
                    const nestedRegion = regionCaret.parentElement.querySelector('.nested');
                    if (!nestedRegion) return;

                    nestedRegion.classList.toggle('show');
                    regionCaret.classList.toggle('caret-down');

                    // Expand all children
                    if (nestedRegion.classList.contains('show')) {
                        nestedRegion.querySelectorAll('.nested').forEach(child => {
                            child.classList.add('show');
                            const childCaret = child.parentElement.querySelector('.caret');
                            if (childCaret) childCaret.classList.add('caret-down');
                        });
                    } else {
                        nestedRegion.querySelectorAll('.nested').forEach(child => {
                            child.classList.remove('show');
                            const childCaret = child.parentElement.querySelector('.caret');
                            if (childCaret) childCaret.classList.remove('caret-down');
                        });
                    }
                });
            });
        });

        window.addEventListener('pageshow', () => {
            const spinner = document.getElementById("loading");
            if (spinner) spinner.style.display = "none";
        });
    </script>
</body>

</html>