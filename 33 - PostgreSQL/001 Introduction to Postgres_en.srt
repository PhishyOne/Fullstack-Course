1
00:00:00,260 --> 00:00:00,920
Hey guys!

2
00:00:00,920 --> 00:00:05,060
So we're now finally ready to start learning about Postgres.

3
00:00:05,090 --> 00:00:10,490
This is going to be our database management system that we're going to use to be able to persist our

4
00:00:10,490 --> 00:00:12,780
data on all of our web apps.

5
00:00:12,800 --> 00:00:19,640
As I mentioned before, the reason why we're choosing to use Postgres is because it is widely used by

6
00:00:19,640 --> 00:00:26,810
many of the top companies that you would have heard of, like Apple or Twitch or Instagram and even

7
00:00:26,810 --> 00:00:27,200
NASA.

8
00:00:27,230 --> 00:00:29,690
Uses Postgres to manage their data.

9
00:00:29,720 --> 00:00:34,370
As you can see, for our purposes, it's clearly going to be more than enough.

10
00:00:34,760 --> 00:00:40,890
Postgres themselves say that they are the world's most advanced open source relational database.

11
00:00:40,910 --> 00:00:47,900
For us, what that means is it's widely used in the industry, as we already saw, and it's also free

12
00:00:47,900 --> 00:00:48,800
and open source.

13
00:00:48,800 --> 00:00:53,600
So we don't have to pay a single cent to use this powerful technology.

14
00:00:54,080 --> 00:00:59,960
But in addition, there's also great career opportunities after you learn Postgres because it's used

15
00:00:59,960 --> 00:01:04,400
so widely in a lot of companies and also in a lot of industries.

16
00:01:04,550 --> 00:01:09,080
Finally, it has great community support because lots of people use this.

17
00:01:09,080 --> 00:01:15,080
As I showed you earlier, it's one of the top most used database management systems by professional

18
00:01:15,080 --> 00:01:15,710
developers.

19
00:01:15,710 --> 00:01:20,510
So that means if you do get stuck, there's plenty of help available because there's lots of people

20
00:01:20,510 --> 00:01:22,370
familiar with this technology.

21
00:01:23,360 --> 00:01:26,100
So how are we going to use Postgres?

22
00:01:26,120 --> 00:01:34,550
Well, we've got our client, as we've seen our front end of the website that is going to hit up our

23
00:01:34,550 --> 00:01:41,270
server side, which is going to be the part that's going to handle the requests from the client.

24
00:01:41,270 --> 00:01:48,170
And in order to handle those requests, there is business logic in the app part of our website.

25
00:01:48,200 --> 00:01:54,230
The app.js or the index.js that handles the requests, figure out what it needs to do.

26
00:01:54,260 --> 00:01:58,730
And that part is what's going to talk to our database.

27
00:01:58,910 --> 00:02:07,130
Our database here is responsible for storing things such as user details, user emails, passwords,

28
00:02:07,130 --> 00:02:14,750
or if you have a blog, maybe it would be storing the posts and other types of data.

29
00:02:14,750 --> 00:02:18,620
If you have a to do list, it will be the to do list items.

30
00:02:18,620 --> 00:02:22,520
If you have a social network, it will be the likes and so on and so forth.

31
00:02:22,520 --> 00:02:23,360
You get what I mean.

32
00:02:23,360 --> 00:02:29,540
All of the data that needs to be stored permanently to be retrieved by the app, depending on whichever

33
00:02:29,540 --> 00:02:30,500
conditions.

34
00:02:30,500 --> 00:02:35,420
For example, somebody wants to pull up a blog post from November 2021, then they're going to hit up

35
00:02:35,420 --> 00:02:41,840
the database, grab that piece of data, and the app knows how to send it back via the correct response

36
00:02:41,840 --> 00:02:47,690
codes, and to format it for the client to be able to display it.

37
00:02:48,530 --> 00:02:55,370
We've already checked off this, this and this, and this is the part that we are focusing on right

38
00:02:55,370 --> 00:02:56,930
now in this module.

39
00:02:57,560 --> 00:03:04,550
The code that's required to use Postgres is also incredibly simple, because there are special packages

40
00:03:04,550 --> 00:03:07,220
set up to use Postgres with node.

41
00:03:07,310 --> 00:03:14,720
You can see here we're using a package called pkg, which is a npm package and enables us to set up

42
00:03:14,720 --> 00:03:19,060
and get running with Postgres in our node backend relatively easily.

43
00:03:19,070 --> 00:03:24,470
So let's run through this code just so you can get an overview of how you might interact with Postgres

44
00:03:24,470 --> 00:03:26,300
from your node backend.

45
00:03:26,330 --> 00:03:33,440
The first thing we do is we create a constant called db, and this is going to contain all of the details

46
00:03:33,440 --> 00:03:37,400
that we need to connect to our Postgres database.

47
00:03:37,520 --> 00:03:42,170
You can imagine the Postgres database as a server of its own.

48
00:03:42,290 --> 00:03:47,000
Previously we saw that we had a server for an API backend.

49
00:03:47,030 --> 00:03:54,530
We had another server for a website that was going to use the API backend, and we had two servers running

50
00:03:54,530 --> 00:03:58,010
simultaneously on localhost 3000, localhost 4000.

51
00:03:58,040 --> 00:04:04,490
Well, now in this case you can imagine your database running on its own database server.

52
00:04:04,490 --> 00:04:10,040
And this can be local as we'll be in our case running Postgres on our own computer.

53
00:04:10,040 --> 00:04:15,740
Or it can be hosted on the internet, in the cloud, in a remote location.

54
00:04:15,740 --> 00:04:21,350
But either way, in order to connect to the database, we need some details to verify ourselves.

55
00:04:21,380 --> 00:04:29,330
The username, the host, the database name, the password for the database, and the port on your local

56
00:04:29,330 --> 00:04:32,810
computer where that database server is running.

57
00:04:32,810 --> 00:04:39,500
We're going to go through these parts later when we actually create our database in Postgres.

58
00:04:39,500 --> 00:04:44,990
But just know that these are like the username and the password to be able to authenticate yourself

59
00:04:44,990 --> 00:04:50,780
with the Postgres database and also connect to the correct database that you actually want to store

60
00:04:50,780 --> 00:04:51,800
your data to.

61
00:04:52,340 --> 00:04:59,720
Now, once we've added all of those details into our constant, then we can use the connect method that.

62
00:04:59,850 --> 00:05:05,710
Comes from the Postgres package to connect to our database, and then we can use db dot queries.

63
00:05:05,730 --> 00:05:11,490
We're going to be using db dot query a lot, because it is where most of our work is done.

64
00:05:11,490 --> 00:05:16,980
And inside this method what we can do is we can write SQL code.

65
00:05:16,980 --> 00:05:20,400
So notice how this is being entered as a string.

66
00:05:20,400 --> 00:05:26,600
But what's in between the double quotes is what we're already familiar with which is SQL.

67
00:05:26,610 --> 00:05:29,370
So Structured Query Language.

68
00:05:29,370 --> 00:05:31,770
And we already saw how we can use this.

69
00:05:31,770 --> 00:05:38,130
And also what may be this line of code means select everything from the users table.

70
00:05:38,130 --> 00:05:41,760
So essentially we're going to get all of the records from the users table.

71
00:05:41,760 --> 00:05:44,880
If there were any errors then we can handle that.

72
00:05:44,910 --> 00:05:49,470
Otherwise we're going to console log and output all of the rows.

73
00:05:49,470 --> 00:05:54,060
So all of the users from this user table.

74
00:05:54,060 --> 00:05:57,420
And then finally we close our connection with DB end.

75
00:05:57,420 --> 00:06:03,150
And that is all it takes to start using Postgres with our node backend.

76
00:06:03,660 --> 00:06:07,710
We're going to go into this in detail and we're going to be doing this many, many times.

77
00:06:07,710 --> 00:06:13,890
Don't worry, this is just an introduction for you to get a taste of how we can use Postgres using our

78
00:06:13,890 --> 00:06:20,640
node and express backends, and just to know that it is so commonly used, and there are all of these

79
00:06:20,640 --> 00:06:27,090
helpful methods to make our lives easier and work with this powerful database.

80
00:06:27,600 --> 00:06:34,380
As I showed you earlier, this is the npm package that we're going to be using node dash Postgres and

81
00:06:34,380 --> 00:06:37,770
it's known as pkg on npm.

82
00:06:37,770 --> 00:06:39,450
We're going to be installing it.

83
00:06:39,450 --> 00:06:45,450
And it will help us vastly simplify all of the operations we need to do with our Postgres database.

84
00:06:45,450 --> 00:06:53,220
And you can see by the number of weekly downloads that it is very, very heavily leaned upon by developers.

85
00:06:53,220 --> 00:06:57,420
So we are doing all of the right things that professional developers do.

86
00:06:58,600 --> 00:07:03,430
In order to get started, the first thing we're going to need to do is to install two pieces of software.

87
00:07:03,460 --> 00:07:06,580
The first is the Postgres server.

88
00:07:06,610 --> 00:07:12,310
This is what's actually going to stand up a Postgres server on our local computer.

89
00:07:12,460 --> 00:07:16,960
Of course, if you're working with a remote server then you wouldn't need this.

90
00:07:16,960 --> 00:07:23,260
But in our case, we do need to run this on our computer, so we don't need to pay for storage costs

91
00:07:23,260 --> 00:07:24,250
and all of that.

92
00:07:24,400 --> 00:07:29,380
Now the second piece of software we're going to install is something called Pgadmin.

93
00:07:29,380 --> 00:07:38,140
And this is a UI or a user interface for us to be able to tap into our Postgres server, because otherwise

94
00:07:38,140 --> 00:07:40,180
we'd have to be running terminal commands.

95
00:07:40,180 --> 00:07:46,060
We'd have to connect to our Postgres server using the command line.

96
00:07:46,060 --> 00:07:53,110
And by using Pgadmin, we vastly simplify it, and we're able to view and organize and query our data

97
00:07:53,110 --> 00:07:56,120
in a graphical user interface.

98
00:07:56,140 --> 00:07:58,480
So these are the two things we need to install.

99
00:07:58,480 --> 00:08:03,820
And if you head over to the next lesson, you'll see the instructions for how to download and install

100
00:08:03,820 --> 00:08:06,880
these pieces of software on your computer system.

101
00:08:06,880 --> 00:08:10,090
So for all of that and more, I'll see you on the next lesson.

