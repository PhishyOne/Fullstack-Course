1
00:00:00,150 --> 00:00:05,370
Now that we've confirmed that we've got our cycles moved into our wallet and that we've linked up our

2
00:00:05,370 --> 00:00:11,550
wallet, then it's time to actually deploy our project. Again, making sure that you're inside the dbank

3
00:00:11,550 --> 00:00:12,540
project folder,

4
00:00:12,960 --> 00:00:20,190
go ahead and run npm install just to make sure that all of the required packages are up and running

5
00:00:20,190 --> 00:00:21,000
and installed.

6
00:00:21,630 --> 00:00:27,750
And if it's already up to date, then that should only take a few seconds. And then we can go ahead and

7
00:00:27,750 --> 00:00:28,690
deploy it.

8
00:00:28,710 --> 00:00:36,360
So similarly, it's dfx deploy, but this time we add the --network and then we specify

9
00:00:36,360 --> 00:00:38,400
the network as ic,

10
00:00:38,490 --> 00:00:39,750
so the Internet computer.

11
00:00:40,470 --> 00:00:47,220
Now, this might take a few minutes and it's going to create your canister on the Internet computer,

12
00:00:47,640 --> 00:00:53,520
and then it's going to deploy what's inside dbank assets onto the live network.

13
00:00:54,150 --> 00:00:59,670
Now, once that's done, it will have told you deployed canisters, and now we can actually go ahead and

14
00:00:59,670 --> 00:01:02,100
view the live website on the Internet.

15
00:01:02,640 --> 00:01:12,300
So if you go ahead and enter dfx canister --network ic id dbank_assets, which

16
00:01:12,300 --> 00:01:16,500
contains the index.html and all of the other frontend parts of our project,

17
00:01:16,710 --> 00:01:25,440
then you'll get a canister ID which you can type into the browser bar. And the structure is https:

18
00:01:25,440 --> 00:01:34,080
-- and then the canister ID and then .raw.ic0.app.

19
00:01:34,620 --> 00:01:40,050
And once you head over to that address, it's almost like a web URL and you will be able to see your

20
00:01:40,050 --> 00:01:43,170
live deployed dbank application.

21
00:01:43,740 --> 00:01:46,050
And this you can send to anyone in the world.

22
00:01:46,050 --> 00:01:49,350
As long as they've got access to the Internet, they'll be able to check it out as well.

23
00:01:49,680 --> 00:01:51,210
So let's try it out.

24
00:01:51,720 --> 00:01:53,930
Let's give it some money to top up with.

25
00:01:54,420 --> 00:01:56,280
And we should see that working.

26
00:02:01,110 --> 00:02:06,030
And now these computations are happening live on the Internet computer.

27
00:02:06,510 --> 00:02:12,420
Now, one thing to note, though, is if you head back to your cycles wallet and you refresh it, you

28
00:02:12,420 --> 00:02:13,860
might need to log in again.

29
00:02:14,010 --> 00:02:20,550
You can see that the initial balance so I had initial balance of 14 terra cycles will have been dropped

30
00:02:20,910 --> 00:02:29,010
because as I said, the deployment part is one of the most expensive parts of using dfinity.

31
00:02:29,490 --> 00:02:35,880
So in order to conserve cycles, we got to be really careful when we actually deploy a new canister.

32
00:02:36,330 --> 00:02:38,640
Now it's different when we update a canister.

33
00:02:39,030 --> 00:02:47,160
So let's say I decided to just comment out these two lines of code, hit save and I wanted to deploy again,

34
00:02:47,520 --> 00:02:49,800
that dfx deploy --network

35
00:02:49,830 --> 00:02:56,400
ic command, again and you'll see that this time, instead of creating a canister, it says all canisters

36
00:02:56,400 --> 00:03:02,220
have already been created and it's simply just upgrading the code for that canister, which, as you'll

37
00:03:02,220 --> 00:03:05,430
notice, does not cost a lot in terms of cycles.

