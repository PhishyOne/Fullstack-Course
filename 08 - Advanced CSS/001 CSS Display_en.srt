1
00:00:00,140 --> 00:00:00,770
Hey, guys.

2
00:00:00,770 --> 00:00:06,200
In this section we're going to be diving deeper into CSS for website layout.

3
00:00:06,230 --> 00:00:11,840
Now, we did a little bit of this when we touched upon CSS positioning in the last section, but we're

4
00:00:11,840 --> 00:00:18,320
going to look at some other aspects of layout and we're going to start with the CSS Display Property.

5
00:00:18,830 --> 00:00:26,900
Previously we've seen that when we create a paragraph element, if we examine the full border of the

6
00:00:26,900 --> 00:00:33,770
element with a tool like Pesticide, then you can see that it actually takes up the entire full width

7
00:00:33,770 --> 00:00:35,390
of the web page.

8
00:00:35,600 --> 00:00:41,600
If we didn't want this to be the case, for example, if we wanted any paragraphs which are short enough

9
00:00:41,600 --> 00:00:47,660
to have the next line wrap up, then we would need to use a different element.

10
00:00:47,960 --> 00:00:56,540
Another type of element is something called a "span", and normally you'll see the span element in the

11
00:00:56,540 --> 00:00:58,730
middle of another element.

12
00:00:58,850 --> 00:01:06,120
In this case, I've got a span open tag and then I've got the content of it, which is the word, "beautiful",

13
00:01:06,120 --> 00:01:09,030
and then I've got the closing tag of the span.

14
00:01:09,120 --> 00:01:14,190
And this span is in between the paragraph element here.

15
00:01:14,190 --> 00:01:20,220
So we've got the "Hello," and then we've got the span and then we've got the "World," and then we've got the

16
00:01:20,220 --> 00:01:22,260
end of the paragraph element.

17
00:01:22,260 --> 00:01:25,650
So that's what the code for this line looks like.

18
00:01:25,680 --> 00:01:33,240
And the unique thing about the span element that's really cool is that it's by default has a different

19
00:01:33,240 --> 00:01:36,300
value for the display property.

20
00:01:36,450 --> 00:01:40,830
There are three common types of display values that we're going to look at.

21
00:01:40,860 --> 00:01:45,180
The span has that value set to something called "inline".

22
00:01:45,390 --> 00:01:55,470
Here's an example where we've got two h2's and because they are set to be display: inline, then they

23
00:01:55,470 --> 00:02:03,930
will literally display, inline with each other without needing the second one to go on to a new line.

24
00:02:04,230 --> 00:02:13,860
By default, most elements have this display set to a value called "block", and a block is exactly what

25
00:02:13,860 --> 00:02:14,580
it sounds like.

26
00:02:14,580 --> 00:02:16,770
It's a full width block.

27
00:02:17,070 --> 00:02:24,150
But as you can see here, we can change that value in order to change the layout of our element.

28
00:02:24,330 --> 00:02:26,880
This is how we would set that CSS value.

29
00:02:26,910 --> 00:02:33,570
We would have the property which is display, which actually has many, many different possible values.

30
00:02:33,570 --> 00:02:38,340
But the three that we're going to examine today is block, inline,

31
00:02:38,370 --> 00:02:43,410
and finally a mixture of the two, which is called inline-block.

32
00:02:44,220 --> 00:02:47,010
Let's take a look at each of these in turn.

33
00:02:47,190 --> 00:02:54,180
As I mentioned, when an element has display set to block, then it's going to take up the entire full

34
00:02:54,180 --> 00:02:54,840
width.

35
00:02:55,110 --> 00:03:02,190
Now, this means that if you have another element, then it's going to go below it and it's not going

36
00:03:02,190 --> 00:03:04,230
to go onto the same line.

37
00:03:04,440 --> 00:03:11,670
Now, however, if the display was inline, then it means that if we had one element here, for example,

38
00:03:11,670 --> 00:03:18,540
a span element, and then we add another element, that's another span, then they're both going to

39
00:03:18,540 --> 00:03:27,870
go into the same line until we can no longer fit any more onto the width of the web page, in which

40
00:03:27,870 --> 00:03:30,720
case they would go to the next line.

41
00:03:31,530 --> 00:03:39,480
Now, one of the important things to remember about elements which are inline in their display is you

42
00:03:39,480 --> 00:03:42,960
can't actually set the size of these elements.

43
00:03:42,960 --> 00:03:44,910
You can't set the width and the height.

44
00:03:45,180 --> 00:03:50,850
The reason for this is because they will default to the size of their content.

45
00:03:50,940 --> 00:03:56,910
If you only had the word hello, then it would only be as wide as it would need to allow that element

46
00:03:56,910 --> 00:03:57,840
to display.

47
00:03:57,840 --> 00:04:04,860
And if you had a much longer sentence then your inline element would stretch to fit that size.

48
00:04:05,310 --> 00:04:11,820
Keeping in mind this, if we go on to the very last type that I want to talk about, which is the

49
00:04:11,820 --> 00:04:18,000
inline-block, what's unique about this, which is a sort of halfway point between the inline and the block,

50
00:04:18,060 --> 00:04:23,490
is the block element allows us to set the height and width,

51
00:04:25,090 --> 00:04:33,610
and the inline aspect of the setting allows us to have elements that go on to the same line.

52
00:04:35,130 --> 00:04:42,270
What that means is if we have two elements which are both inline block and we have one that's say,

53
00:04:42,570 --> 00:04:51,840
200 by 200 and we have another that's maybe 20 by 100,

54
00:04:52,320 --> 00:04:59,130
then in this case, what will happen is because they're both inline-block, then we can set their height

55
00:04:59,130 --> 00:05:00,000
and width.

56
00:05:00,810 --> 00:05:08,220
And because they are inline block, they can actually go on to the same horizontal line as long as there

57
00:05:08,220 --> 00:05:11,910
is enough space on the width of the web page.

58
00:05:12,390 --> 00:05:19,530
By changing this display property to block inline or inline block, we can actually determine the layout

59
00:05:19,560 --> 00:05:20,760
of our website.

60
00:05:21,150 --> 00:05:28,170
And the final one that I want to mention in the same breath is when you set the display property to

61
00:05:28,170 --> 00:05:35,650
"none", then what that's going to do is it's going to make any element on the screen basically disappear.

62
00:05:35,950 --> 00:05:43,000
And sometimes this is useful when you have a button that say, hides an element or when you check-off

63
00:05:43,000 --> 00:05:45,580
an item in the to do list and you want it to disappear,

64
00:05:45,610 --> 00:05:48,130
this might be the property that you'll need.

65
00:05:48,130 --> 00:05:52,090
So the display property can change many, many different things.

66
00:05:52,330 --> 00:05:57,850
And these are just some of the values that you're going to see set on the display property quite frequently.

67
00:05:58,330 --> 00:06:05,950
In order to better understand this, I've created an example website for you at this address

68
00:06:05,980 --> 00:06:09,910
appbrewery.github.io/css-display

69
00:06:09,910 --> 00:06:17,800
And here I've got three elements a Block Paragraph, an Inline Paragraph and an Inline-Block Paragraph.

70
00:06:17,800 --> 00:06:24,490
So they're all paragraph elements, but you can actually change the height and width of all of these

71
00:06:24,490 --> 00:06:27,580
elements and see what happens to the blocks.

72
00:06:27,580 --> 00:06:34,750
So, for example, we know that our block elements can change in height and width, but no matter how

73
00:06:34,750 --> 00:06:38,350
much you change the width, it's not going to bring the next line up.

74
00:06:38,380 --> 00:06:45,340
We know that our inline elements cannot be changed in terms of height and width because they fit to

75
00:06:45,340 --> 00:06:47,410
the width and height of their content.

76
00:06:47,500 --> 00:06:53,560
And we know that our inline-block element is the one that gives us the powers of both, essentially

77
00:06:53,560 --> 00:06:55,510
allowing us to change the height and width,

78
00:06:55,510 --> 00:07:03,790
but also if the width was large, then it might need to occupy its own line,

79
00:07:03,790 --> 00:07:10,390
but if it's small enough, then it could fit on the same line as another inline element or an

80
00:07:10,390 --> 00:07:11,470
inline-block element.

81
00:07:11,890 --> 00:07:17,740
Have a play around with this on this website to better understand this concept of these three display

82
00:07:17,740 --> 00:07:18,550
values.

83
00:07:19,150 --> 00:07:25,480
And then once you're done, I've got an exercise for you to practice writing the code and setting the

84
00:07:25,480 --> 00:07:27,070
CSS display property.

85
00:07:27,700 --> 00:07:35,560
Go ahead and download the starting file for 8.0 CSS Display, extract it and open it inside CS Code

86
00:07:35,560 --> 00:07:38,290
and then open up the index.html.

87
00:07:38,440 --> 00:07:39,010
Here

88
00:07:39,010 --> 00:07:40,540
I've got two TODOs for you.

89
00:07:40,540 --> 00:07:42,460
There's two steps to this challenge.

90
00:07:42,460 --> 00:07:47,920
The first challenge is by changing only the display property in the CSS,

91
00:07:47,920 --> 00:07:52,360
so I've got a style tag here with all the CSS and this is what you're going to change.

92
00:07:52,600 --> 00:07:58,060
If we take a look at the preview for the code as it is, you can see we've got three paragraph elements

93
00:07:58,060 --> 00:08:03,550
on screen and at the beginning it looks pretty much the same as the example website we were playing

94
00:08:03,550 --> 00:08:04,810
around with just now.

95
00:08:04,930 --> 00:08:12,310
But the only difference is we have the width and height set to 200px on each of the squares.

96
00:08:12,580 --> 00:08:22,420
What I want you to do is to change only the display property in the CSS code right here in the index.html.

97
00:08:22,420 --> 00:08:30,310
And by doing that, I want you to create a web page where all three of these squares line up horizontally

98
00:08:30,310 --> 00:08:33,100
in the same way as the goal image.

99
00:08:33,370 --> 00:08:37,390
Remember, you're going to have to think about which type of display you're going to need in order to

100
00:08:37,390 --> 00:08:42,669
get all three of these to show up in the same size and horizontally lined up.

101
00:08:42,669 --> 00:08:45,910
So pause the video and give this a go now.

102
00:08:48,350 --> 00:08:48,710
All right.

103
00:08:48,710 --> 00:08:53,780
So the first thing we know is that when we have a display set to inline, it's not going to respect

104
00:08:53,780 --> 00:08:54,830
the height and width.

105
00:08:54,920 --> 00:08:58,070
First thing we have to change is this display value.

106
00:08:58,070 --> 00:09:01,010
So I'm going to change it to an inline-block.

107
00:09:01,010 --> 00:09:05,810
And notice how as soon as I've changed that it is now a 200 by 200 square.

108
00:09:06,530 --> 00:09:14,120
The other thing you notice is that the two inline-blocks, so the green one and the blue one allow this

109
00:09:14,120 --> 00:09:17,150
layout where they line up next to each other,

110
00:09:17,150 --> 00:09:25,460
whereas this red box which is set to block does not, because it wants to occupy the full width of the

111
00:09:25,460 --> 00:09:26,210
page.

112
00:09:26,360 --> 00:09:31,790
So that is the one that we're going to have to change in order to achieve our desired goal.

113
00:09:31,790 --> 00:09:34,340
So let's change this to an inline-block.

114
00:09:34,340 --> 00:09:35,690
And notice

115
00:09:35,690 --> 00:09:41,570
now, if I stretch my page so that there's enough width, then everything will actually line up onto

116
00:09:41,570 --> 00:09:42,950
the same horizontal.

117
00:09:43,430 --> 00:09:50,040
If you had a little bit more narrow then because it's an inline-block, it will move to the next page

118
00:09:50,040 --> 00:09:58,110
so that it actually can show the full width of each element, but on a normal viewing screen,

119
00:09:58,110 --> 00:10:07,380
so if you actually opened this in a website, then you should see them lining up perfectly horizontally.

120
00:10:07,860 --> 00:10:14,430
The next part of this challenge is to change only the display property again, and we're going to make

121
00:10:14,430 --> 00:10:17,490
all three of them line up vertically like this one.

122
00:10:17,490 --> 00:10:22,650
Now this is cut off at the end, but you can imagine if you scroll, they're just three equal size squares

123
00:10:22,650 --> 00:10:24,930
which are all lined up vertically.

124
00:10:24,930 --> 00:10:27,900
And we do that by changing the display property.

125
00:10:28,110 --> 00:10:30,840
Pause the video and see if you can make that happen.

126
00:10:32,680 --> 00:10:33,070
All right.

127
00:10:33,070 --> 00:10:39,670
So the thing that we know about the vertical layout is in order for them to not go on to the same line

128
00:10:39,670 --> 00:10:44,290
horizontally, they can't have anything to do with inline.

129
00:10:44,500 --> 00:10:46,630
In order to achieve that vertical layout.

130
00:10:46,660 --> 00:10:51,010
We need to change everything to have a block display value,

131
00:10:51,670 --> 00:10:58,360
because what this is telling our website is each of these elements wants all of the width to itself.

132
00:10:58,360 --> 00:11:01,240
Don't let it share the width with any other element.

133
00:11:01,390 --> 00:11:09,640
And by doing this we end up with this vertical stacking of our elements and we've achieved two dramatically

134
00:11:09,640 --> 00:11:16,000
different layouts just by understanding the difference between display: block, display: inline, and

135
00:11:16,000 --> 00:11:17,230
display: inline-block.

136
00:11:17,320 --> 00:11:20,020
So how to play around with that if you fancy,

137
00:11:20,020 --> 00:11:25,150
but otherwise head over to the next lesson where we're going to learn about another way of laying out

138
00:11:25,150 --> 00:11:30,040
elements using the float property. For all of that and more, I'll see you there.

